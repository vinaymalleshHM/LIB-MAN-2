package com.capgemini.librarymanagement.dao;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import com.capgemini.librarymanagement.db.DbStore1;
import com.capgemini.librarymanagement.dto.BookInfo;
import com.capgemini.librarymanagement.dto.BookUserRel;
import com.capgemini.librarymanagement.dto.UserBookDetail;
import com.capgemini.librarymanagement.dto.UserInfoBean;

public class UserDAOImpl implements UserDAO {

	static int count = 0;
	public BookInfo searchBook(int id) {
		for (BookInfo book : DbStore1.bookInfo) {
			if (book.getBookId() == id) {
				return book;
			}
		}
		return null;
	}

	public BookInfo searchBookWithName(String name) {
		for (BookInfo book : DbStore1.bookInfo) {
			if (book.getBookName().startsWith(name)  || book.getBookAuthor().startsWith(name)) {
				System.out.println(book);
				return book;
			}
			}
		return null;
	}

	public boolean requestCheck(BookInfo book) {
		UserBookDetail bookDetail = new UserBookDetail();
		bookDetail.setBookId(book.getBookId());
		bookDetail.setCount(1);
		bookDetail.setUserId(DbStore1.user.get(0).getUsrId());
		DbStore1.userBookDetails.add(bookDetail);
		
		for (UserBookDetail bookDetailReq : DbStore1.userBookDetails) {
			System.out.println(bookDetailReq.getBookId());
			System.out.println(bookDetailReq.getUserId());
		}
		return true;
	}

	public boolean bookReturn() {
		BookUserRel userRel = new BookUserRel();
		List<UserBookDetail> bookList = new LinkedList<UserBookDetail>();
		for ( BookUserRel  relation: DbStore1.userBorrowedBook) {
			// to show fine
//			long lTime = new Date().getTime() + 16 * 24 * 60 * 60 * 1000;
//			userRel.setReturnDate(new Date(lTime));
			
			
			userRel.setReturnDate(new Date());
			userRel.setUserInfoBean(relation.getUserInfoBean());
			
			bookList.addAll(relation.getBook());
		}
		
		return true;
	}
 
}
